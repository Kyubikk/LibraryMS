@page
@model LoginSystemApp.Pages.Books.IndexModel

@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> Localizer

<style>
    .table tbody tr:hover {
        background-color: #e2f6e7;
        transition: background-color 0.3s ease;
    }

    .table {
        border-radius: 30px;
        overflow: hidden;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* CSS cho chế độ phóng to ảnh */
    .image-fullscreen {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1050; /* Cao hơn modal Bootstrap */
    }

    .image-fullscreen img {
        max-width: 90%;
        max-height: 90%;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
        border-radius: 8px;
    }

    .image-fullscreen img:hover {
        cursor: zoom-out;
    }
</style>

<h2>@Localizer["BookListTitle"]</h2>
<a asp-page="./Create" class="btn btn-primary" style="margin-bottom: 15px;">
    <i class="bi bi-plus-circle"></i> @Localizer["AddNewBookButton"]
</a>

<form method="get" style="margin-bottom: 20px;">
    <div class="input-group">
        <input type="text" name="searchString" value="@Model.SearchString" placeholder="@Localizer["SearchPlaceholder"]" class="form-control" />
    </div>
</form>

@if (Model.Books == null || !Model.Books.Any())
{
    <p>@Localizer["NoBooksMessage"]</p>
}
else
{
    <table class="table table-bordered rounded">
        <thead>
            <tr>
                <th>@Localizer["CoverImageColumn"]</th>
                <th>@Localizer["BookTitleColumn"]</th>
                <th>@Localizer["AuthorColumn"]</th>
                <th>@Localizer["PublisherColumn"]</th>
                <th>@Localizer["CategoryColumn"]</th>
                <th>@Localizer["YearPublishedColumn"]</th>
                <th>@Localizer["ISBNColumn"]</th>
                <th>@Localizer["QuantityColumn"]</th>
                <th>@Localizer["AvailableColumn"]</th>
                <th>@Localizer["ActionsColumn"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Model.Books)
            {
                <tr onclick="loadBookDetails(@book.BookId)">
                    <td>
                        @if (!string.IsNullOrEmpty(book.CoverImagePath))
                        {
                            <img src="@book.CoverImagePath" alt="@Localizer["CoverImageAlt"]" style="width: 50px; height: auto;" />
                        }
                        else
                        {
                            <span>@Localizer["NotAvailable"]</span>
                        }
                    </td>
                    <td>@book.Title</td>
                    <td>@book.Author?.Name</td>
                    <td>@book.Publisher?.Name</td>
                    <td>@book.Category?.CategoryName</td>
                    <td>@book.YearPublished</td>
                    <td>@book.ISBN</td>
                    <td>@book.Quantity</td>
                    <td>@book.Available</td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-page="./Edit" asp-route-id="@book.BookId" class="btn btn-warning">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <a asp-page="./Delete" asp-route-id="@book.BookId" class="btn btn-danger">
                                <i class="bi bi-trash"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <!-- Thanh phân trang -->
    <nav aria-label="@Localizer["PaginationNavigation"]">
        <ul class="pagination">
            @if (Model.Books.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?searchString=@Model.SearchString&pageIndex=@(Model.Books.PageIndex - 1)">
                        <i class="bi bi-arrow-left"></i> <!-- Icon Previous -->
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">
                        <i class="bi bi-arrow-left"></i> <!-- Icon Previous -->
                    </span>
                </li>
            }

            @for (int i = 1; i <= Model.Books.TotalPages; i++)
            {
                if (i == Model.Books.PageIndex)
                {
                    <li class="page-item active">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="?searchString=@Model.SearchString&pageIndex=@i">@i</a>
                    </li>
                }
            }

            @if (Model.Books.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?searchString=@Model.SearchString&pageIndex=@(Model.Books.PageIndex + 1)">
                        <i class="bi bi-arrow-right"></i> <!-- Icon Next -->
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">
                        <i class="bi bi-arrow-right"></i> <!-- Icon Next -->
                    </span>
                </li>
            }
        </ul>
    </nav>
}
<!-- Modal -->
<div class="modal fade" id="bookDetailsModal" tabindex="-1" aria-labelledby="bookDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookDetailsModalLabel">Book Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4">
                        <img id="bookCoverImage" src="" alt="Book Cover" class="img-fluid rounded">
                    </div>
                    <div class="col-md-8">
                        <h4 id="bookTitle"></h4>
                        <p><strong>Author:</strong> <span id="bookAuthor"></span></p>
                        <p><strong>Publisher:</strong> <span id="bookPublisher"></span></p>
                        <p><strong>Year Published:</strong> <span id="bookYear"></span></p>
                        <p><strong>ISBN:</strong> <span id="bookISBN"></span></p>
                        <p><strong>Category:</strong> <span id="bookCategory"></span></p>
                        <p><strong>Available:</strong> <span id="bookAvailable"></span></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    function loadBookDetails(bookId) {
        fetch(`/Books?handler=Details&bookId=${bookId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    document.getElementById('bookCoverImage').src = data.coverImagePath || 'default-image.jpg';
                    document.getElementById('bookTitle').textContent = data.title;
                    document.getElementById('bookAuthor').textContent = `Author: ${data.authorName}`;
                    document.getElementById('bookPublisher').textContent = data.publisherName;
                    document.getElementById('bookYear').textContent = data.yearPublished;
                    document.getElementById('bookISBN').textContent = data.isbn;
                    document.getElementById('bookCategory').textContent = data.categoryName;
                    document.getElementById('bookAvailable').textContent = data.available;
                    $('#bookDetailsModal').modal('show');
                } else {
                    alert(data.message || 'Failed to load book details.');
                }
            })
            .catch(error => console.error('Error loading book details:', error));
    }

    document.getElementById('bookCoverImage').addEventListener('mousedown', function () {
        // Đóng modal trước khi phóng to ảnh
        const modal = document.getElementById('bookDetailsModal');
        const modalInstance = bootstrap.Modal.getInstance(modal);
        if (modalInstance) {
            modalInstance.hide();
        }

        // Tạo div full-screen cho ảnh
        const fullscreenDiv = document.createElement('div');
        fullscreenDiv.classList.add('image-fullscreen');

        const img = document.createElement('img');
        img.src = this.src;
        fullscreenDiv.appendChild(img);

        document.body.appendChild(fullscreenDiv);

        fullscreenDiv.addEventListener('click', function () {
            document.body.removeChild(fullscreenDiv);
        });
    });


</script>
